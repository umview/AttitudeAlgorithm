function Eular = AHRSupdateC(Accel,Gyro,Mag)
    global T;
    global Q;
    global Kp;
    global Ki;
    global ErrInt;
    Accel = Accel / sqrt(sum(Accel.^2));
    Mag = Mag / sqrt(sum(Mag.^2));
    mx = Mag(1);
    my = Mag(2);
    mz = Mag(3);
    ax = Accel(1);
    ay = Accel(2);
    az = Accel(3);
    gx = Gyro(1);
    gy = Gyro(2);
    gz = Gyro(3);
    q0 = Q(1);
    q1 = Q(2);
    q2 = Q(3);
    q3 = Q(4);
    q0q0 = q0 * q0;  
    q0q1 = q0 * q1;  
    q0q2 = q0 * q2;  
    q0q3 = q0 * q3;  
    q1q1 = q1 * q1;  
    q1q2 = q1 * q2;  
    q1q3 = q1 * q3;  
    q2q2 = q2 * q2;  
    q2q3 = q2 * q3;  
    q3q3 = q3 * q3;

    hx = 2.0 * (mx * (0.5 - q2q2 - q3q3) + my * (q1q2 - q0q3) + mz * (q1q3 + q0q2));
    hy = 2.0 * (mx * (q1q2 + q0q3) + my * (0.5 - q1q1 - q3q3) + mz * (q2q3 - q0q1));
    bx = sqrt(hx * hx + hy * hy);
    bz = 2.0 * (mx * (q1q3 - q0q2) + my * (q2q3 + q0q1) + mz * (0.5 - q1q1 - q2q2));
    halfvx = q1q3 - q0q2;
    halfvy = q0q1 + q2q3;
    halfvz = q0q0 - 0.5 + q3q3;
    halfwx = bx * (0.5 - q2q2 - q3q3) + bz * (q1q3 - q0q2);
    halfwy = bx * (q1q2 - q0q3) + bz * (q0q1 + q2q3);
    halfwz = bx * (q0q2 + q1q3) + bz * (0.5 - q1q1 - q2q2);  
    halfex = (ay * halfvz - az * halfvy) + (my * halfwz - mz * halfwy);
	halfey = (az * halfvx - ax * halfvz) + (mz * halfwx - mx * halfwz);
	halfez = (ax * halfvy - ay * halfvx) + (mx * halfwy - my * halfwx);
    ErrInt(1) = ErrInt(1) + halfex * Ki * T;
    ErrInt(2) = ErrInt(2) + halfey * Ki * T;
    ErrInt(3) = ErrInt(3) + halfez * Ki * T;
    gx = gx + Kp * halfex + ErrInt(1);
    gy = gy + Kp * halfey + ErrInt(2);
    gz = gz + Kp * halfez + ErrInt(3);
    gx = gx * (0.5 * T);     
    gy = gy * (0.5 * T);  
    gz = gz * (0.5 * T);  
    qa = q0;  
    qb = q1;  
    qc = q2;
    q0 = q0 + (-qb * gx - qc * gy - q3 * gz);  
    q1 = q1 + (qa * gx + qc * gz - q3 * gy);  
    q2 = q2 + (qa * gy - qb * gz + q3 * gx);  
    q3 = q3 + (qa * gz + qb * gy - qc * gx);
    Q(1) = q0;
    Q(2) = q1;
    Q(3) = q2;
    Q(4) = q3;
    Q = Q / sqrt(sum(Q.^2));
    Eular(1) = atan((2.0 * (q0q1 + q2q3)) / (q0q0 - q1q1 - q2q2 + q3q3));
    Eular(2) = -asin(2.0 * (q1q3 - q0q2));
    Eular(3) = atan((2.0 * (q1q2 + q0q3)) / (q0q0 + q1q1 - q2q2 - q3q3));
end

